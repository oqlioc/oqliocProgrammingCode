#cmd창

SQLPLUS (오라클 접속)
사용자명 입력: system, hr, scott 등
비밀번호 입력: password

# 테이블 생성
CREATE TABLE NAME(
id NUMBER NOT NULL Primary Key,
username VARCHAR2(20),
dept VARCHAR2(7),
birth DATE,
email VARCHAR2(40)
);

#테이블 행 추가
alter table member add(tel varchar2(30) not null);.

#테이블 행 수정
alter table member modify(username varchar2(10));

#테이블 삭제
drop table NAME

#테이블 형태 보기
DESC NAME

#테이블 행에 데이터 추가
insert into NAME values(100001,'박종억','팀원','01.12.23','def@naver.com');

#테이블에 각 컬럼 값을 선택하여 행에 데이터 추가
INSERT INTO Table명(Column1, Column2, Column3) VALUES(Value1, Value2, Value3);
INSERT INTO advanced(NAME, AGE, BELONG) VALUES('홍길동', 999, '고급'); 

#테이블에 추가한 데이터 출력
select * from NAME

#SELECT 컬럼명 FROM 테이블명 WHERE 조건
#테이블에 id 100002인 데이터 행 출력
select * from member where id = '100002'

#member 테이블에서 id와 username이 true일시 id, username, birth 출력
select id,username,birth FROM member WHERE id = 100002 and username='박종억';

#member 테이블에서 id가 100001인 데이터를 set 데이터 정보로 변경
UPDATE member set id = 100005, username='이쁘니' where id=100001;

#member 테이블에서 id와 name이 true인 데이터를 삭제
delete from member where id=100004 and name='정유진';

#select * from TableName으로 데이터 출력시 라인 줄 맞추는방법
set linesize 300;

#텍스트 파일 생성
save text_file_name.txt

#텍스트 파일 실행
edit text_file_name.txt

#텍스트 파일 호출
get text_file_name.txt

#텍스트 파일 SQL문 실행
@text_file_name.txt

#텍스트 파일 저장되어 있는 내용 뒤에 추가하기
save text_file_name.txt append

#앞으로 쓰는 모든 내용이 text_file_name.txt 에 저장
spool text_file_name.txt
spool off ( 이 문법을 입력할 때 까지 모든 내용 저장 )

#기본 cmd 창으로 돌아가는법
host
#후 exit 입력시 다시 sqlplus 환경으로 돌아옴

column column_name format 00;
#id(number) 가 1이면 01 로 변경되어 출력
#되돌아갈거면 00 대신 0을 넣으면 된다.

column column_name format a10;
#컬럼 이름을 입력한 곳에 10바이트까지 길이를 할당하여 출력

column column_name format 0,0;
#column_name(number) 가 1이면 0,1로 변경되어 출력(화폐단위 출력시 유용)

#SQL PLUS 편집 명령어
List (L) - 버퍼에 저장된 단 한 문장의 SQL 문을 나타낸다.
/ - SQL 문을 보여주지 않고 바로 실행한다.
Run (R) - 버퍼에 저장된 SQL 문을 보여주고 실행한다.




------------------------------------------



------------------------------------------



------------------------------------------

SQL> spool mem1.txt
SQL> insert into member values('10','은비야돌아와줘');

1 개의 행이 만들어졌습니다.

SQL> save mem2.txt
file mem2.txt(이)가 생성되었습니다
SQL> edit mem2.txt

SQL> @mem2.txt

1 개의 행이 만들어졌습니다.


1 개의 행이 만들어졌습니다.

SQL> spool off
SQL> get mem1.txt
  1  SQL> insert into member values('10','은비야돌아와줘');
  2  1 개의 행이 만들어졌습니다.
  3  SQL> save mem2.txt
  4  file mem2.txt(이)가 생성되었습니다
  5  SQL> edit mem2.txt
  6  SQL> @mem2.txt
  7  1 개의 행이 만들어졌습니다.
  8  1 개의 행이 만들어졌습니다.
  9* SQL> spool off
 10

------------------------------------------
